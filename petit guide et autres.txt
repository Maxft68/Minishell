
ajout dossierS /src /include/ execution /parsing/ 

lancer des cmd simples pour commencer


reflechir tokenisation/ parsing

!! creer des branches AVANT dajouter des nouveautes !!


faire export en premier ou env
puis echo cd ....env

en premier soi redirection "< > " soit commande

enregistrer le code error dans une structure pour pouvoir le resortir avec $? meme si code erreur succes

echo coucou > outfile1 >outfile2 > outfile3 : coucou ne sera que dans outfile3 
mais outfile 1 et 2 seront creer
idem pour les infile, mais si infile1 echoue alors tout sarrete 
et ne va meme pas voir infile2

cat <in1 >out1 >out2 <in2 = in2 ira dans out2 et out1 supprimer

"cat <in <in2 | cat >out"

noeud 1
command "cat" "arg1" "arg2" ...
redir sign <
		name in
	sign <
	name in2  
noeud 2
command cat 
	redir
	name out 
	sign >


si | present alors executer les built-in uniquement dans les enfants


echo hello world from minishell

Tu dois tous les stocker dans t_cmd->argv, comme ceci :

argv[0] = "echo";
argv[1] = "hello";
argv[2] = "world";
argv[3] = "from";
argv[4] = "minishell";
argv[5] = NULL;

cat < input.txt > output.txt

‚û°Ô∏è Une seule commande, avec :

    argv = ["cat", NULL]

    redir 1 = < input.txt

    redir 2 = > output.txt

Si current token = | et (le pr√©c√©dent est | ou c‚Äôest le premier ou le dernier
 token) ‚Üí erreur.

 üî• Les guillemets d√©sactivent le r√¥le sp√©cial des op√©rateurs (>, <, |, etc.).

üéØ Ton lexer doit savoir lire une cha√Æne enti√®re entre " " ou ' ' comme un seul mot.

<infile.txt cat >outfile.txt | cat >outfile2.txt, 
le pipe ne recoit rien car redirection out avant


tache du jour :
- gerer les expands
- savoir si on est entre quote ou non !
- pouvoir afficher l'env quand demander.
- modifier le split pour en faire un bon split_token

parsing lexer(decoupe et categorise) a faire par max pour lexec
COMPRENDRE COMMENT GERER PLUSIEURS PIPES


	si 2 commandes dans un seul pipe -> error
    Si une redirection est pr√©sente sans fichier ‚Üí erreur ( < ou > )

    Si | est en d√©but ou fin ‚Üí erreur

    Si une commande est vide (ex : | |) ‚Üí erreur


	pour lexer enlever les redirections et le mot suivant la redirection qui peut etre coller
	et potentillement directement le coller dans execve



